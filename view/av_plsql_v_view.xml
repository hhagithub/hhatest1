<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext" 
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
	<changeSet id="3aa3fb42c829192366c28c2e89d81067fac77656" author="(HHA_PROD)-Generated"     >
		<n0:createSxmlObject objectName="AV_PLSQL_V" objectType="VIEW" ownerName="HHA_PROD"   >
			<n0:source><![CDATA[
  <VIEW xmlns="http://xmlns.oracle.com/ku" version="1.0">
   <SCHEMA>HHA_PROD</SCHEMA>
   <NAME>AV_PLSQL_V</NAME>
   <COL_LIST>
      <COL_LIST_ITEM>
         <NAME>APPLICATION_ID</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>APPLICATION_NAME</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PAGE_ID</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PAGE_NAME</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PAGE_DESIGNER_URL</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PAGE_GROUP</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PAGE_FUNCTION</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>BEST_PRACTICE</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>COMPONENT_NAME</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>COMPONENT_TYPE</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PROCESS_POINT</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>CODE_TYPE</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PLSQL_CODE</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PLSQL_CODE_VC2</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>PLSQL_CODE_CLOB</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>TOOLTIP</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>CODE_LINES</NAME>
      </COL_LIST_ITEM>
      <COL_LIST_ITEM>
         <NAME>CODE_LENGTH</NAME>
      </COL_LIST_ITEM>
   </COL_LIST>
   <SUBQUERY>select app.application_id
      ,app.application_name
      ,p.page_id
      ,app.page_name
      ,av_general_pkg.f_get_page_designer_url(pi_app_id      => app.application_id
                                             ,pi_app_page_id => app.page_id) page_designer_url
      ,nvl(app.page_group
          ,'no page group') page_group
      ,app.page_function
      ,case
         when code_length > 2000 then
          0
         else
          best_practice
       end best_practice
      ,p.component_name
      ,p.component_type
      ,p.process_point
      ,p.code_type
      ,p.plsql_code_vc2 plsql_code -- only for backward compatibility
      ,p.plsql_code_vc2
      ,p.plsql_code_clob
      ,'&#60;b>' || p.component_name || ' (' || p.component_type || ' - ' || p.code_type || ')&#60;/b>&#60;br>' || p.plsql_code_vc2 tooltip
      ,regexp_count(p.plsql_code_clob
                   ,chr(10)) + 1 code_lines
      ,p.code_length
from apex_application_pages app
join (
      -- Application Process
      select p.application_id
             ,0 page_id
             ,p.process_name component_name
             ,'application_process' component_type
             ,1 best_practice
             ,p.process_point
             ,p.process_type code_type
             ,to_char(substr(p.process
                            ,0
                            ,3900)) plsql_code_vc2
             ,p.process plsql_code_clob
             ,length(p.process) code_length
      from apex_application_processes p
      union all
      -- Page Process
      select pp.application_id
             ,pp.page_id
             ,pp.process_name component_name
             ,'page_process' component_type
             ,1 best_practices
             ,pp.process_point
             ,pp.process_type code_type
             ,to_char(substr(pp.process_source
                            ,0
                            ,3900)) plsql_code_vc2
             ,pp.process_source plsql_code_clob
             ,length(pp.process_source) code_length
      from apex_application_page_proc pp
      where pp.process_type_code in ('DML_PROCESS_ROW'
                                    ,'NATIVE_IG_DML'
                                    ,'NATIVE_LOAD_UPLOADED_DATA'
                                    ,'MULTI_ROW_UPDATE'
                                    ,'NATIVE_PARSE_UPLOADED_DATA'
                                    ,'MULTI_ROW_UPDATE'
                                    ,'NATIVE_PARSE_UPLOADED_DATA'
                                    ,'NATIVE_PREPARE_UPLOADED_DATA'
                                    ,'PLSQL'
                                    ,'DML_FETCH_ROW')
      union all
      -- page computation
      select pc.application_id
             ,pc.page_id
             ,pc.item_name component_name
             ,'computation' component_type
             ,1 best_practices
             ,pc.computation_point process_point
             ,pc.computation_type code_type
             ,pc.computation plsql_code_vc
             ,to_clob(pc.computation) plsql_clode_clob
             ,length(pc.computation) code_length
      from apex_application_page_comp pc
      where pc.computation_type in ('PL/SQL Expression'
                                   ,'SQL Query (return single value)'
                                   ,'PL/SQL Function Body')
      union all
      -- item default
      select pi.application_id
             ,pi.page_id
             ,pi.item_name component_name
             ,'item_default' component_type
             ,0 best_practices
             ,'Rendering' process_point
             ,pi.item_default_type code_type
             ,pi.item_default plsql_code_vc2
             ,to_clob(pi.item_default) plsql_code_clob
             ,length(pi.item_default) code_length
      from apex_application_page_items pi
      where pi.item_default is not null
      and pi.item_default_type = 'PLSQL_EXPRESSION'
      union all
      -- item source
      select pi.application_id
             ,pi.page_id
             ,pi.item_name component_name
             ,'item_source' component_type
             ,0 best_practices
             ,'Rendering' process_point
             ,pi.item_source_type code_type
             ,pi.item_source plsql_code_vc2
             ,to_clob(pi.item_source) plsql_code_clob
             ,length(pi.item_source) code_length
      from apex_application_page_items pi
      where pi.item_source is not null
      and pi.item_source_type in ('PL/SQL Function Body'
                                ,'SQL Query (return single value)'
                                ,'PL/SQL Expression or Function')
      union all
      -- item lov
      select pi.application_id
             ,pi.page_id
             ,pi.item_name component_name
             ,'lov' component_type
             ,case
                when pi.lov_named_lov is null then
                 0
                else
                 1
              end best_practice
             ,'Rendering' process_point
             ,nvl2(pi.lov_named_lov
                  ,'named_lov'
                  ,'query') code_type
             ,pi.lov_definition plsql_code_vc2
             ,to_clob(pi.lov_definition) plsql_code_clob
             ,length(pi.lov_definition) code_length
      from apex_application_page_items pi
      where pi.lov_definition is not null
      and instr(pi.lov_definition
              ,'STATIC2:') = 0
      and instr(pi.lov_definition
              ,'STATIC:') = 0
      union all
      -- item condition
      select pi.application_id
             ,pi.page_id
             ,pi.item_name component_name
             ,'condition' component_type
             ,1 best_practice
             ,'Rendering' process_point
             ,pi.condition_type code_type
             ,pi.condition_expression1 plsql_code_vc2
             ,to_clob(pi.condition_expression1) plsql_code_clob
             ,length(pi.condition_expression1) code_length
      from apex_application_page_items pi
      where pi.condition_type_code is not null
      and pi.condition_type_code in ('EXISTS'
                                   ,'FUNCTION_BODY'
                                   ,'NOT_EXISTS'
                                   ,'PLSQL_EXPRESSION')
      union all
      -- Region source
      select pr.application_id
             ,pr.page_id
             ,pr.region_name component_name
             ,'region_source' component_type
             ,1 best_practice
             ,'Rendering' process_point
             ,pr.source_type code_type
             ,to_char(substr(pr.region_source
                            ,0
                            ,3900)) plsql_code_vc2
             ,pr.region_source plsql_code_clob
             ,length(pr.region_source) code_length
      from apex_application_page_regions pr
      where source_type_code in ('DYNAMIC_QUERY'
                                ,'FUNCTION_RETURNING_SQL_QUERY'
                                ,'PLSQL_PROCEDURE'
                                ,'SQL_QUERY'
                                ,'UPDATABLE_SQL_QUERY')
      union all
      -- chart series
      select pcs.application_id
             ,pcs.page_id
             ,pcs.series_name component_name
             ,'chart_series_source' component_type
             ,1 best_practice
             ,'Rendering' process_point
             ,pcs.data_source_type code_type
             ,to_char(substr(pcs.data_source
                            ,0
                            ,3900)) plsql_code_vc2
             ,pcs.data_source plsql_code_clob
             ,length(pcs.data_source) code_length
      from apex_application_page_chart_s pcs
      --
      ) p on p.application_id = app.application_id
      and p.page_id = app.page_id
</SUBQUERY>
</VIEW>]]></n0:source>
		</n0:createSxmlObject>
	</changeSet>
</databaseChangeLog>
