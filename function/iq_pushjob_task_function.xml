<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext" 
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
	<changeSet id="ccb42a4a49d2f58e3b727eaa5c745c54de2d1669" author="(HHA_PROD)-Generated"     >
		<n0:createOracleFunction objectName="IQ_PUSHJOB_TASK" objectType="FUNCTION" ownerName="HHA_PROD"   >
			<n0:source><![CDATA[
  CREATE OR REPLACE EDITIONABLE FUNCTION "HHA_PROD"."IQ_PUSHJOB_TASK" (jobno varchar2, loc varchar2) return varchar2 is
token_string   varchar2(4000);
l_reqBody      CLOB;
l_response     CLOB;
l_xml          xmltype;
json_body      VARCHAR2(4000);
l_Status       VARCHAR2(200);

begin
token_string := getIQtoken('https://hha'||loc||'.iq-motive.com:10004/api/Auth/login',loc);

apex_web_service.g_request_headers.delete();
apex_web_service.g_request_headers(1).name  := 'Authorization';
apex_web_service.g_request_headers(1).value := 'Bearer '||token_string;
apex_web_service.g_request_headers(2).name  := 'Content-Type';
apex_web_service.g_request_headers(2).value := 'application/json; charset=utf-8';
--apex_web_service.g_request_headers(3).name := 'Content-Length';
--apex_web_service.g_request_headers(3).value := '';

BEGIN

declare temp number;
begin
select distinct 1 into temp
from work_job_details ji
where ji_job_no = jobno;
-----tasks found
SELECT JOB INTO l_reqBody
FROM
(
       SELECT JSON_OBJECT( 
            'appointmentref' is to_char(j.jm_appointment_no),
            'dmsid'          is to_char(j.jm_job_no),
            'masterJC'       is JM_MASTER_JOB_NO,
            'woType'         is (select JT_TYPE_DESCRIPTION from work_job_type t where t.jt_job_type = j.jm_job_type),
            'description'    is '',
            'remarks'        is j.jm_remarks,
            'vehicleId'      is j.jm_chassis_no,
            'licensePlate'   is j.jm_plate_no,
            'engineCode'     is (select distinct v.veh_type_desc from vehicle_stock v where chassis_no = j.jm_chassis_no and v.new_used_flag = 'N' AND ROWNUM = 1),
            'mileage'        is nvl(j.jm_speedometer_reading,0),
            'carType'        is (select distinct m.fin_code from vehicle_stock v, models m where v.serial_no=m.mod_code and chassis_no = j.jm_chassis_no and v.new_used_flag = 'N' AND ROWNUM = 1),
            'yearOfBuild'    is Nvl((select nvl(v.vm_model_year,0) from work_vehicle_master v where v.vm_chassis_no = j.jm_chassis_no AND ROWNUM = 1),0),
            'preferedMechanic'     is '',
            'preferedReceptionist' is j.jm_service_advisor,
            'customerCity'         is j.jm_city,
            'customerName'         is j.jm_customer_name,
            'customerAddress'      is j.jm_customer_add1||j.jm_customer_add2,
            'customerPhone'        is j.jm_mobile,
            'tasks' VALUE (
               SELECT JSON_ARRAYAGG(
                      JSON_OBJECT(
                         'duration' VALUE Round(Nvl((floor(nvl(ji.STD_TIME,0))*60)+(mod(nvl(ji.STD_TIME,0),floor(nvl(ji.STD_TIME,0)))*60),0),0),
                         'code'     VALUE ji.ji_operation_id,
                         'name'     VALUE ji.ji_operation_descr))
                         from work_job_master jj , work_job_details ji
                         where jj.jm_job_no = ji.ji_job_no(+)
                         and NVL(jj.jm_status,88) = 1
                         and jj.jm_job_no = jobno
                               --)ABSENT ON NULL) job
                               )) job

       FROM work_job_master j
       WHERE j.jm_job_no = jobno
       
);
exception when no_data_found then
----tasks not found
SELECT JOB INTO l_reqBody
FROM
(
    SELECT REPLACE(JOB,'"tasks":null','"tasks":[]') AS JOB
    FROM (
            SELECT JSON_OBJECT
            ( 
            'appointmentref' is to_char(j.jm_appointment_no),
            'dmsid'          is to_char(j.jm_job_no),
            'masterJC'       is JM_MASTER_JOB_NO,
            'woType'         is (select JT_TYPE_DESCRIPTION from work_job_type t where t.jt_job_type = j.jm_job_type),
            'description'    is '',
            'remarks'        is j.jm_remarks,
            'vehicleId'      is j.jm_chassis_no,
            'licensePlate'   is j.jm_plate_no,
            'engineCode'     is (select distinct v.veh_type_desc from vehicle_stock v where chassis_no = j.jm_chassis_no),
            'mileage'        is nvl(j.jm_speedometer_reading,0),
            'carType'        is (select distinct m.fin_code from vehicle_stock v, models m where v.serial_no=m.mod_code and chassis_no = j.jm_chassis_no),
            'preferedMechanic'     is '',
            'preferedReceptionist' is j.jm_service_advisor,
            'customerCity'         is j.jm_city,
            'customerName'         is j.jm_customer_name,
            'customerAddress'      is j.jm_customer_add1||j.jm_customer_add2,
            'customerPhone'        is j.jm_mobile,
            'tasks'                is ''
            --ABSENT ON NULL
            ) AS JOB

           FROM work_job_master j
           WHERE j.jm_job_no = jobno
           and NVL(j.jm_status,88) = 1
         )
      
); 

end;


json_body  := substr(l_reqBody, 1, 32767);

l_response := apex_web_service.make_rest_request(p_url           => 'https://hha'||loc||'.iq-motive.com:10004/api/dms',
                                                 p_http_method   => 'PUT',
                                                 p_body          => to_clob(json_body),
                                                 p_wallet_path   => 'file:/u01/app/oracle/product/12.2.0/dbhome_1/wallet',
                                                 p_wallet_pwd    => 'welcome1'
                                                );

l_Status := apex_web_service.g_status_code;

IF trim(l_Status) = '200' THEN
/*
   begin
     update work_job_master w
     set w.IQ_DATA_FLAG = 'Y'
     where w.JM_JOB_NO = jobno;
     commit;
   end;
   */
   RETURN '200-Success';
ELSIF trim(l_Status) = '400' THEN
   RETURN '409-Bad Request';
ELSIF trim(l_Status) = '409' THEN
   RETURN '409-Conflict';
ELSIF trim(l_Status) = '500' THEN
   RETURN '500-Internal Server Error';  
ELSIF trim(l_Status) = '504' THEN
   RETURN '504 Gateway Time-out';        
ELSE
   RETURN 'Error: '||l_Status||'-'||substr(l_response,1,200);
END IF;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
  RETURN SQLERRM;
  WHEN OTHERS THEN
  RETURN SQLERRM;
END;
end;
/]]></n0:source>
		</n0:createOracleFunction>
	</changeSet>
</databaseChangeLog>
