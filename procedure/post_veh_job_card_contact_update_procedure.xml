<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext" 
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
	<changeSet id="cd09e516ec4b22b9323432bd650a2479d35cca7d" author="(HHA_PROD)-Generated"     >
		<n0:createOracleProcedure objectName="POST_VEH_JOB_CARD_CONTACT_UPDATE" objectType="PROCEDURE" ownerName="HHA_PROD"   >
			<n0:source><![CDATA[
  CREATE OR REPLACE EDITIONABLE PROCEDURE "HHA_PROD"."POST_VEH_JOB_CARD_CONTACT_UPDATE" (payload_ clob) IS
   l_object         json_object_t;
   l_object_a         json_object_t;
   l_key_obj        json_key_list;
   v_clob           CLOB;
   tv               apex_json.t_values;
   obj_in_obj       JSON_OBJECT_T;
   l_key_list       json_key_list;
   l_array          json_array_t;
   l_element        json_element_t;
   l_eats           json_array_t;
   l_eats1           json_array_t;
   output           json_array_t;
   status           VARCHAR2(5000);
   v_job_no_OLD     VARCHAR2(100);
   v_job_no_NEW     VARCHAR2(100);

   V_EXIST NUMBER;


    v_AppointmentRef VARCHAR2(100);
    v_VhcId VARCHAR2(100);
    v_LocationCode VARCHAR2(100);
    v_ServiceAdvisorId VARCHAR2(100);
    v_Vin VARCHAR2(100);
    v_Plate_no VARCHAR2(100);
    v_PhoneNumber VARCHAR2(100);
    v_DriverName VARCHAR2(100);
    v_DriverEmail VARCHAR2(100);
    v_DriverPhone VARCHAR2(100);
    v_OwnerName VARCHAR2(100);
    v_OwnerEmail VARCHAR2(100);
    v_OwnerPhone VARCHAR2(100);

    v_ContactOwner VARCHAR2(100);
    v_IsNewCustomerInfo VARCHAR2(100);


    V_VM_SUPL_CODE VARCHAR2(100);
    V_VM_ENGINE_NO VARCHAR2(100);
    V_VM_PLATE_NO VARCHAR2(100);
    V_VM_REG_NO VARCHAR2(100);
    V_VM_VEHICLE_NO VARCHAR2(100);

    V_VM_CUSTOMER_NAME  VARCHAR2(100);
    V_VM_CUSTOMER_ADD1  VARCHAR2(1000);
    V_VM_CUSTOMER_ADD2   VARCHAR2(1000);
    V_VM_CITY     VARCHAR2(100);
    V_VM_COUNTRY   VARCHAR2(100);
    V_ARA_VM_CUSTOMER_NAME  VARCHAR2(100);
    V_ARA_VM_CUSTOMER_ADD1  VARCHAR2(1000);
    V_ARA_VM_CUSTOMER_ADD2  VARCHAR2(1000);
    V_VM_TELEPHONE_NO  VARCHAR2(100);
    V_VW_MOBILE  VARCHAR2(100);
    V_VM_EMAIL  VARCHAR2(100);
    V_VM_CITY_CODE  VARCHAR2(100);
    V_VM_DISTRICT_CODE  VARCHAR2(100);




    v_jc_cc_id number;
    v_jc_concerns VARCHAR2(1000);

     L_OBJECT_SIZE_1  NUMBER;
      L_OBJECT_SIZE_2  NUMBER;

     V_MasterJcId VARCHAR2(100);
    V_RepairJcId VARCHAR2(100);
BEGIN



DELETE FROM json_responce_jobcard where service_id =3;
COMMIT;
/*
v_clob := '{
    "MasterJcId": 982179636,
    "RepairJcId": 215297806,
    "VhcId": 28,
    "Vin": "JM7GL4S30K1306509",
    "RepairItems" : [
        {
            "ItemName": "Under the hood",
            "ItemID": "7we8f77f7f.wef9f9.opp",
            "Remarks1": "Remark in english",
            "Remarks2": "Remark in arabic",
            "Color": "amber"
        },{
            "ItemName": "30000 KM Service",
            "ItemID": "wegoweg09.wef9f9.opp",
            "Remarks1": "Remark in english",
            "Remarks2": "Remark in arabic",
            "Color": "amber"
        }
    ]
}';

  */
   l_object := json_object_t(payload_);
  --l_object := json_object_t(v_clob);


   DBMS_OUTPUT.put_line('MasterJcId : ' || l_object.get_string('MasterJcId'));
   v_MasterJcId := l_object.get_string('MasterJcId');

   DBMS_OUTPUT.put_line('RepairJcId : ' || l_object.get_string('RepairJcId'));
   v_RepairJcId := l_object.get_string('RepairJcId');

   DBMS_OUTPUT.put_line('Vin : ' || l_object.get_string('Vin'));
   v_Vin := l_object.get_string('Vin');

     DBMS_OUTPUT.put_line('VhcId : ' || l_object.get_string('VhcId'));
   V_VhcId := l_object.get_string('VhcId');


 -----Part 1-----
 BEGIN
     L_OBJECT_SIZE_1 := l_object.get_Array('RepairItems').get_size ; --RepairItems  --ServiceItems
      DBMS_OUTPUT.put_line ('Number of SIZE: ' ||  L_OBJECT_SIZE_1 );
exception
  when others then
   DBMS_OUTPUT.put_line ('Part1 Size: ' ||  L_OBJECT_SIZE_1 );
 END;

 IF  L_OBJECT_SIZE_1  > 0 then
   l_eats := l_object.get_Array('RepairItems'); --RepairItems  --ServiceItems
   DBMS_OUTPUT.put_line ('Number of elements in array: ' || l_eats.get_size);

 -- if l_eats.get_size = 0 then
  --  dbms_output.put_line('Empty object');
  --else
    --dbms_output.put_line('Non-empty object');

       select 1 INTO V_EXIST from work_job_master where jm_job_no = v_RepairJcId;
       -- select * from work_job_mcc where jc_job_no = v_job_no_OLD;

   -- l_eats := l_object.get_Array('ServiceItems'); --RepairItems  --ServiceItems
   DBMS_OUTPUT.put_line ('Number of elements in array: ' || l_eats.get_size);

 --Use standard PL/SQL loops to iterate through array elements
   FOR indx IN 0 .. l_eats.get_size - 1
   LOOP
        l_element := l_eats.get (indx);
        DBMS_OUTPUT.put_line (l_eats.get_string (indx));
      CASE
      WHEN l_element.is_object
         THEN
            l_object_A := TREAT (l_element AS json_object_t);
           DBMS_OUTPUT.put_line (l_object_A.stringify);


        DECLARE
            v_ItemName varchar2(100);
            v_ItemID varchar2(100);
            v_Remarks1 varchar2(100);
            v_Remarks2 varchar2(100);
            v_Color varchar2(100);


                BEGIN
                    v_ItemName    := l_object_A.get_string ('ItemName');
                    v_ItemID      := l_object_A.get_string ('ItemID');
                    v_Remarks1    := l_object_A.get_string ('Remarks1');
                    v_Remarks2    := l_object_A.get_string ('Remarks2');
                    v_Color       := l_object_A.get_string ('Color');


                   DBMS_OUTPUT.put_line ('v_ItemName'|| ':'||v_ItemName);
                   DBMS_OUTPUT.put_line ('v_ItemID'|| ':'||v_ItemID);
                   DBMS_OUTPUT.put_line ('v_Remarks1'|| ':'||v_Remarks1);
                   DBMS_OUTPUT.put_line ('v_Remarks2'|| ':'||v_Remarks2);
                   DBMS_OUTPUT.put_line ('v_Color'|| ':'||v_Color);

                   Select nvl(max(jc_cc_id),0)+1  into v_jc_cc_id from work_job_mcc
                   where jc_job_no = v_RepairJcId;

                   v_jc_concerns  := v_ItemName ||' '|| v_Remarks1 ||' '|| v_Remarks2;

                   insert into work_job_mcc
                  (jc_comp_code,jc_dept_no,jc_location,jc_job_no,jc_cc_id,jc_concerns, jc_iq_id)
                  values
                  (1,31,substr(v_RepairJcId,1,3),v_RepairJcId,v_jc_cc_id,v_jc_concerns, '');




                    insert into json_responce_jobcard(job_no_new,JC_CC_ID,Jc_Concerns,status,service_id) values (v_RepairJcId,v_jc_cc_id,v_jc_concerns, '200',3)  ;

                exception
                    when no_data_found then
                        insert into json_responce_jobcard(job_no_new,JC_CC_ID,Jc_Concerns,status,service_id) values (v_RepairJcId,v_jc_cc_id,v_jc_concerns, '204',3)  ;
                    when others then
                        insert into json_responce_jobcard(job_no_new,JC_CC_ID,Jc_Concerns,status,service_id) values (v_RepairJcId,v_jc_cc_id,v_jc_concerns, '400',3)  ;


                end;

       END CASE;
   END LOOP;
   End if; ---l_eats if conditions

 -----END Part 1-----





   commit;
   DBMS_OUTPUT.put_line (STATUS);



exception
  when others then

   insert into json_responce_jobcard(job_no_new,status,service_id) values ('data error','400',3);

  commit;

END;
/]]></n0:source>
		</n0:createOracleProcedure>
	</changeSet>
</databaseChangeLog>
