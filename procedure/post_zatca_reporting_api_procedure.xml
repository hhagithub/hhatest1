<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext" 
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
	<changeSet id="61901bc52dca98f5c925723e7bb71b35fc4fb398" author="(HHA_PROD)-Generated"     >
		<n0:createOracleProcedure objectName="POST_ZATCA_REPORTING_API" objectType="PROCEDURE" ownerName="HHA_PROD"   >
			<n0:source><![CDATA[
  CREATE OR REPLACE EDITIONABLE PROCEDURE "HHA_PROD"."POST_ZATCA_REPORTING_API" (REQ_ID_ VARCHAR2) is
  l_respclob CLOB;
  l_reqbody  CLOB;
  l_body CLOB;

  l_xml     xmltype;
  l_json    apex_json.t_values;
  v_array   apex_application_global.vc_arr2;
  l_members WWV_FLOW_T_VARCHAR2;

  l_Status   VARCHAR2(200);
  l_Status_DESC VARCHAR2(200);
  v_username VARCHAR2(4000);
  v_password VARCHAR2(1000);

  V_UUID VARCHAR2(200);
  V_HASH VARCHAR2(200);
  V_PIH VARCHAR2(200);

  v_ENTITY VARCHAR2(10);
  V_INVOICE_TYPE VARCHAR2(10);
  v_SIGNED_XML clob;
  V_STEP1_HASH_OUTPUT VARCHAR2(100);
begin

    apex_web_service.g_request_headers(1).name := 'Content-Type';
    apex_web_service.g_request_headers(1).value := 'application/json'; 
    apex_web_service.g_request_headers(2).name := 'accept';
    apex_web_service.g_request_headers(2).value := 'application/json';
    apex_web_service.g_request_headers(3).name := 'Accept-Language';
    apex_web_service.g_request_headers(3).value := 'en';
    apex_web_service.g_request_headers(4).name := 'Accept-Version';
    apex_web_service.g_request_headers(4).value := 'V2';
    apex_web_service.g_request_headers(5).name := 'Authorization';                                         
    apex_web_service.g_request_headers(5).value := 'Basic VFVsSlJERkVRME5CTTIxblFYZEpRa0ZuU1ZSaWQwRkJaVE5WUVZsV1ZUTTBTUzhyTlZGQlFrRkJRamRrVkVGTFFtZG5jV2hyYWs5UVVWRkVRV3BDYWsxU1ZYZEZkMWxMUTFwSmJXbGFVSGxNUjFGQ1IxSlpSbUpIT1dwWlYzZDRSWHBCVWtKbmIwcHJhV0ZLYXk5SmMxcEJSVnBHWjA1dVlqTlplRVo2UVZaQ1oyOUthMmxoU21zdlNYTmFRVVZhUm1ka2JHVklVbTVaV0hBd1RWSjNkMGRuV1VSV1VWRkVSWGhPVlZVeGNFWlRWVFZYVkRCc1JGSlRNVlJrVjBwRVVWTXdlRTFDTkZoRVZFbDVUVVJaZUUxcVJUTk9SRUV4VFd4dldFUlVTVEJOUkZsNFRWUkZNMDVFUVRGTmJHOTNVMVJGVEUxQmEwZEJNVlZGUW1oTlExVXdSWGhFYWtGTlFtZE9Wa0pCYjFSQ1YwWnVZVmQ0YkUxU1dYZEdRVmxFVmxGUlRFVjNNVzlaV0d4b1NVaHNhRm95YUhSaU0xWjVUVkpKZDBWQldVUldVVkZFUlhkcmVFMXFZM1ZOUXpSM1RHcEZkMVpxUVZGQ1oyTnhhR3RxVDFCUlNVSkNaMVZ5WjFGUlFVTm5Ua05CUVZSVVFVczViSEpVVm10dk9YSnJjVFphV1dOak9VaEVVbHBRTkdJNVV6UjZRVFJMYlRkWldFb3JjMjVVVm1oTWEzcFZNRWh6YlZOWU9WVnVPR3BFYUZKVVQwaEVTMkZtZERoREwzVjFWVms1TXpSMmRVMU9ielJKUTBwNlEwTkJhVTEzWjFsblIwRXhWV1JGVVZOQ1owUkNLM0JJZDNkbGFrVmlUVUpyUjBFeFZVVkNRWGRUVFZNeGIxbFliR2htUkVsMFRXcE5NR1pFVFhSTlZFVjVUVkk0ZDBoUldVdERXa2x0YVZwUWVVeEhVVUpCVVhkUVRYcEJkMDFFWXpGT1ZHYzBUbnBCZDAxRVFYcE5VVEIzUTNkWlJGWlJVVTFFUVZGNFRWUkJkMDFTUlhkRWQxbEVWbEZSWVVSQmFHRlpXRkpxV1ZOQmVFMXFSVmxOUWxsSFFURlZSVVIzZDFCU2JUbDJXa05DUTJSWVRucGhWelZzWXpOTmVrMUNNRWRCTVZWa1JHZFJWMEpDVTJkdFNWZEVObUpRWm1KaVMydHRWSGRQU2xKWWRrbGlTRGxJYWtGbVFtZE9Wa2hUVFVWSFJFRlhaMEpTTWxsSmVqZENjVU56V2pGak1XNWpLMkZ5UzJOeWJWUlhNVXg2UWs5Q1owNVdTRkk0UlZKNlFrWk5SVTluVVdGQkwyaHFNVzlrU0ZKM1QyazRkbVJJVGpCWk0wcHpURzV3YUdSSFRtaE1iV1IyWkdrMWVsbFRPVVJhV0Vvd1VsYzFlV0l5ZUhOTU1WSlVWMnRXU2xSc1dsQlRWVTVHVEZaT01WbHJUa0pNVkVWMVdUTktjMDFKUjNSQ1oyZHlRbWRGUmtKUlkwSkJVVk5DYjBSRFFtNVVRblZDWjJkeVFtZEZSa0pSWTNkQldWcHBZVWhTTUdORWIzWk1NMUo2WkVkT2VXSkROVFpaV0ZKcVdWTTFibUl6V1hWak1rVjJVVEpXZVdSRlZuVmpiVGx6WWtNNVZWVXhjRVpoVnpVeVlqSnNhbHBXVGtSUlZFVjFXbGhvTUZveVJqWmtRelZ1WWpOWmRXSkhPV3BaVjNobVZrWk9ZVkpWYkU5V2F6bEtVVEJWZEZVelZtbFJNRVYwVFZObmVFdFROV3BqYmxGM1MzZFpTVXQzV1VKQ1VWVklUVUZIUjBneWFEQmtTRUUyVEhrNU1HTXpVbXBqYlhkMVpXMUdNRmt5UlhWYU1qa3lURzVPYUV3eU9XcGpNMEYzUkdkWlJGWlNNRkJCVVVndlFrRlJSRUZuWlVGTlFqQkhRVEZWWkVwUlVWZE5RbEZIUTBOelIwRlJWVVpDZDAxRFFtZG5ja0puUlVaQ1VXTkVRWHBCYmtKbmEzSkNaMFZGUVZsSk0wWlJiMFZIYWtGWlRVRnZSME5EYzBkQlVWVkdRbmROUTAxQmIwZERRM05IUVZGVlJrSjNUVVJOUVc5SFEwTnhSMU5OTkRsQ1FVMURRVEJyUVUxRldVTkpVVU5XZDBSTlkzRTJVRThyVFdOdGMwSllWWG92ZGpGSFpHaEhjRGR5Y1ZOaE1rRjRWRXRUZGpnek9FbEJTV2hCVDBKT1JFSjBPU3N6UkZOc2FXcHZWbVo0ZW5Ka1JHZzFNamhYUXpNM2MyMUZaRzlIVjFaeVUzQkhNUT09OlhsajE1THlNQ2dTQzY2T2JuRU8vcVZQZmhTYnMza0RUalduR2hlWWhmU3M9';
   apex_web_service.g_request_headers(6).name := 'Clearance-Status';
    apex_web_service.g_request_headers(6).value := 0;


    apex_json.initialize_clob_output;
    apex_json.open_object;
  
  

--RequestInvoice    
--l_body := '{"invoiceHash":"wbcTEgZdIionBUoaykRP1wzMmd+3vdk+PM18joW8bjI=","uuid":"3cf5ee18-ee25-44ea-a444-2c37ba7f28bc","invoice":"PEludm9pY2UgeG1sbnM9InVybjpvYXNpczpuYW1lczpzcGVjaWZpY2F0aW9uOnVibDpzY2hlbWE6eHNkOkludm9pY2UtMiIgeG1sbnM6Y2FjPSJ1cm46b2FzaXM6bmFtZXM6c3BlY2lmaWNhdGlvbjp1Ymw6c2NoZW1hOnhzZDpDb21tb25BZ2dyZWdhdGVDb21wb25lbnRzLTIiIHhtbG5zOmNiYz0idXJuOm9hc2lzOm5hbWVzOnNwZWNpZmljYXRpb246dWJsOnNjaGVtYTp4c2Q6Q29tbW9uQmFzaWNDb21wb25lbnRzLTIiIHhtbG5zOmV4dD0idXJuOm9hc2lzOm5hbWVzOnNwZWNpZmljYXRpb246dWJsOnNjaGVtYTp4c2Q6Q29tbW9uRXh0ZW5zaW9uQ29tcG9uZW50cy0yIj4gPGNiYzpQcm9maWxlSUQ+cmVwb3J0aW5nOjEuMDwvY2JjOlByb2ZpbGVJRD4gPGNiYzpJRD41NTEwNzMwMjwvY2JjOklEPiA8Y2JjOlVVSUQ+M2NmNWVlMTgtZWUyNS00NGVhLWE0NDQtMmMzN2JhN2YyOGJjPC9jYmM6VVVJRD4gPGNiYzpJc3N1ZURhdGU+MjAyMi0wOS0xODwvY2JjOklzc3VlRGF0ZT4gPGNiYzpJc3N1ZVRpbWU+MTI6Mzg6MDI8L2NiYzpJc3N1ZVRpbWU+IDxjYmM6SW52b2ljZVR5cGVDb2RlIG5hbWU9IjAxMDAwMDAiPjM4ODwvY2JjOkludm9pY2VUeXBlQ29kZT4gPGNiYzpEb2N1bWVudEN1cnJlbmN5Q29kZT5TQVI8L2NiYzpEb2N1bWVudEN1cnJlbmN5Q29kZT4gPGNiYzpUYXhDdXJyZW5jeUNvZGU+U0FSPC9jYmM6VGF4Q3VycmVuY3lDb2RlPiA8Y2FjOkFkZGl0aW9uYWxEb2N1bWVudFJlZmVyZW5jZT4gPGNiYzpJRD5JQ1Y8L2NiYzpJRD4gPGNiYzpVVUlEPjE8L2NiYzpVVUlEPiA8L2NhYzpBZGRpdGlvbmFsRG9jdW1lbnRSZWZlcmVuY2U+IDxjYWM6QWRkaXRpb25hbERvY3VtZW50UmVmZXJlbmNlPiA8Y2JjOklEPlBJSDwvY2JjOklEPiA8Y2FjOkF0dGFjaG1lbnQ+IDxjYmM6RW1iZWRkZWREb2N1bWVudEJpbmFyeU9iamVjdCBtaW1lQ29kZT0idGV4dC9wbGFpbiI+TldabFkyVmlOalptWm1NNE5tWXpPR1E1TlRJM09EWmpObVEyT1Raak56bGpNbVJpWXpJek9XUmtOR1U1TVdJME5qY3lPV1EzTTJFeU4yWmlOVGRsT1E9PTwvY2JjOkVtYmVkZGVkRG9jdW1lbnRCaW5hcnlPYmplY3Q+IDwvY2FjOkF0dGFjaG1lbnQ+IDwvY2FjOkFkZGl0aW9uYWxEb2N1bWVudFJlZmVyZW5jZT4gPGNhYzpBY2NvdW50aW5nU3VwcGxpZXJQYXJ0eT4gPGNhYzpQYXJ0eT4gPGNhYzpQYXJ0eUlkZW50aWZpY2F0aW9uPiA8Y2JjOklEIHNjaGVtZUlEPSJDUk4iPjEyMzQ1Njc4OTA8L2NiYzpJRD4gPC9jYWM6UGFydHlJZGVudGlmaWNhdGlvbj4gPGNhYzpQb3N0YWxBZGRyZXNzPiA8Y2JjOlN0cmVldE5hbWU+QmFiIE1ha2toYTwvY2JjOlN0cmVldE5hbWU+IDxjYmM6QnVpbGRpbmdOdW1iZXI+MDAwMDwvY2JjOkJ1aWxkaW5nTnVtYmVyPiA8Y2JjOkNpdHlTdWJkaXZpc2lvbk5hbWU+TUFLS0FIPC9jYmM6Q2l0eVN1YmRpdmlzaW9uTmFtZT4gPGNiYzpDaXR5TmFtZT5KRUREQUg8L2NiYzpDaXR5TmFtZT4gPGNiYzpQb3N0YWxab25lPjIxNDExPC9jYmM6UG9zdGFsWm9uZT4gPGNhYzpDb3VudHJ5PiA8Y2JjOklkZW50aWZpY2F0aW9uQ29kZT5TQTwvY2JjOklkZW50aWZpY2F0aW9uQ29kZT4gPC9jYWM6Q291bnRyeT4gPC9jYWM6UG9zdGFsQWRkcmVzcz4gPGNhYzpQYXJ0eVRheFNjaGVtZT4gPGNiYzpDb21wYW55SUQ+MzAwMjEwOTU4ODEwMDAzPC9jYmM6Q29tcGFueUlEPiA8Y2FjOlRheFNjaGVtZT4gPGNiYzpJRD5WQVQ8L2NiYzpJRD4gPC9jYWM6VGF4U2NoZW1lPiA8L2NhYzpQYXJ0eVRheFNjaGVtZT4gPGNhYzpQYXJ0eUxlZ2FsRW50aXR5PiA8Y2JjOlJlZ2lzdHJhdGlvbk5hbWU+2KfZhNit2KfYrCDYrdiz2YrZhiDYudmE2Yog2LHYttinINmI2LTYsdmD2KfZhyDYp9mE2YXYrdiv2YjYr9ipPC9jYmM6UmVnaXN0cmF0aW9uTmFtZT4gPC9jYWM6UGFydHlMZWdhbEVudGl0eT4gPC9jYWM6UGFydHk+IDwvY2FjOkFjY291bnRpbmdTdXBwbGllclBhcnR5PiA8Y2FjOkFjY291bnRpbmdDdXN0b21lclBhcnR5PiA8Y2FjOlBhcnR5PiA8Y2FjOlBhcnR5SWRlbnRpZmljYXRpb24+IDxjYmM6SUQgc2NoZW1lSUQ9IkNSTiI+NTUxMDczMDI8L2NiYzpJRD4gPC9jYWM6UGFydHlJZGVudGlmaWNhdGlvbj4gPGNhYzpQb3N0YWxBZGRyZXNzPiA8Y2JjOlN0cmVldE5hbWU+MDAwMDwvY2JjOlN0cmVldE5hbWU+IDxjYmM6QnVpbGRpbmdOdW1iZXI+MDAwMDwvY2JjOkJ1aWxkaW5nTnVtYmVyPiA8Y2JjOkNpdHlTdWJkaXZpc2lvbk5hbWU+MDAwMDwvY2JjOkNpdHlTdWJkaXZpc2lvbk5hbWU+IDxjYmM6Q2l0eU5hbWU+MDAwMDwvY2JjOkNpdHlOYW1lPiA8Y2JjOlBvc3RhbFpvbmU+MDAwMDA8L2NiYzpQb3N0YWxab25lPiA8Y2FjOkNvdW50cnk+IDxjYmM6SWRlbnRpZmljYXRpb25Db2RlPlNBPC9jYmM6SWRlbnRpZmljYXRpb25Db2RlPiA8L2NhYzpDb3VudHJ5PiA8L2NhYzpQb3N0YWxBZGRyZXNzPiA8Y2FjOlBhcnR5VGF4U2NoZW1lPiA8Y2FjOlRheFNjaGVtZT4gPGNiYzpJRD5WQVQ8L2NiYzpJRD4gPC9jYWM6VGF4U2NoZW1lPiA8L2NhYzpQYXJ0eVRheFNjaGVtZT4gPGNhYzpQYXJ0eUxlZ2FsRW50aXR5PiA8Y2JjOlJlZ2lzdHJhdGlvbk5hbWU+KFNOQiApINin2YTYqNmG2YMg2KfZhNin2YfZhNmKINin2YTYs9i52YjYr9mKPC9jYmM6UmVnaXN0cmF0aW9uTmFtZT4gPC9jYWM6UGFydHlMZWdhbEVudGl0eT4gPC9jYWM6UGFydHk+IDwvY2FjOkFjY291bnRpbmdDdXN0b21lclBhcnR5PiA8Y2FjOlRheFRvdGFsPiA8Y2JjOlRheEFtb3VudCBjdXJyZW5jeUlEPSJTQVIiPjEzODQ1LjAwPC9jYmM6VGF4QW1vdW50PiA8Y2FjOlRheFN1YnRvdGFsPiA8Y2JjOlRheGFibGVBbW91bnQgY3VycmVuY3lJRD0iU0FSIj45MjMwMC4wMDwvY2JjOlRheGFibGVBbW91bnQ+IDxjYmM6VGF4QW1vdW50IGN1cnJlbmN5SUQ9IlNBUiI+MTM4NDUuMDA8L2NiYzpUYXhBbW91bnQ+IDxjYWM6VGF4Q2F0ZWdvcnk+IDxjYmM6SUQ+UzwvY2JjOklEPiA8Y2JjOlBlcmNlbnQ+MTU8L2NiYzpQZXJjZW50PiA8Y2FjOlRheFNjaGVtZT4gPGNiYzpJRD5WQVQ8L2NiYzpJRD4gPC9jYWM6VGF4U2NoZW1lPiA8L2NhYzpUYXhDYXRlZ29yeT4gPC9jYWM6VGF4U3VidG90YWw+IDwvY2FjOlRheFRvdGFsPiA8Y2FjOlRheFRvdGFsPiA8Y2JjOlRheEFtb3VudCBjdXJyZW5jeUlEPSJTQVIiPjEzODQ1LjAwPC9jYmM6VGF4QW1vdW50PiA8L2NhYzpUYXhUb3RhbD4gPGNhYzpMZWdhbE1vbmV0YXJ5VG90YWw+IDxjYmM6TGluZUV4dGVuc2lvbkFtb3VudCBjdXJyZW5jeUlEPSJTQVIiPjkyMzAwLjAwPC9jYmM6TGluZUV4dGVuc2lvbkFtb3VudD4gPGNiYzpUYXhFeGNsdXNpdmVBbW91bnQgY3VycmVuY3lJRD0iU0FSIj45MjMwMC4wMDwvY2JjOlRheEV4Y2x1c2l2ZUFtb3VudD4gPGNiYzpUYXhJbmNsdXNpdmVBbW91bnQgY3VycmVuY3lJRD0iU0FSIj4xMDYxNDUuMDA8L2NiYzpUYXhJbmNsdXNpdmVBbW91bnQ+IDxjYmM6QWxsb3dhbmNlVG90YWxBbW91bnQgY3VycmVuY3lJRD0iU0FSIj4wLjAwPC9jYmM6QWxsb3dhbmNlVG90YWxBbW91bnQ+IDxjYmM6UGF5YWJsZUFtb3VudCBjdXJyZW5jeUlEPSJTQVIiPjEwNjE0NS4wMDwvY2JjOlBheWFibGVBbW91bnQ+IDwvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbD4gPGNhYzpJbnZvaWNlTGluZT4gPGNiYzpJRD4xPC9jYmM6SUQ+IDxjYmM6SW52b2ljZWRRdWFudGl0eSB1bml0Q29kZT0iUENFIj4xPC9jYmM6SW52b2ljZWRRdWFudGl0eT4gPGNiYzpMaW5lRXh0ZW5zaW9uQW1vdW50IGN1cnJlbmN5SUQ9IlNBUiI+OTIzMDAuMDA8L2NiYzpMaW5lRXh0ZW5zaW9uQW1vdW50PiA8Y2FjOlRheFRvdGFsPiA8Y2JjOlRheEFtb3VudCBjdXJyZW5jeUlEPSJTQVIiPjEzODQ1LjAwPC9jYmM6VGF4QW1vdW50PiA8Y2JjOlJvdW5kaW5nQW1vdW50IGN1cnJlbmN5SUQ9IlNBUiI+MTA2MTQ1LjAwPC9jYmM6Um91bmRpbmdBbW91bnQ+IDwvY2FjOlRheFRvdGFsPiA8Y2FjOkl0ZW0+IDxjYmM6TmFtZT5NQVpEQTYgU0ROIDIuNUwgQS9UIENPUkUgTFRIUjwvY2JjOk5hbWU+IDxjYWM6Q2xhc3NpZmllZFRheENhdGVnb3J5PiA8Y2JjOklEPlM8L2NiYzpJRD4gPGNiYzpQZXJjZW50PjE1PC9jYmM6UGVyY2VudD4gPGNhYzpUYXhTY2hlbWU+IDxjYmM6SUQ+VkFUPC9jYmM6SUQ+IDwvY2FjOlRheFNjaGVtZT4gPC9jYWM6Q2xhc3NpZmllZFRheENhdGVnb3J5PiA8L2NhYzpJdGVtPiA8Y2FjOlByaWNlPiA8Y2JjOlByaWNlQW1vdW50IGN1cnJlbmN5SUQ9IlNBUiI+MTA2MTQ1LjAwPC9jYmM6UHJpY2VBbW91bnQ+IDwvY2FjOlByaWNlPiA8L2NhYzpJbnZvaWNlTGluZT4gPC9JbnZvaWNlPg=="}';
--DBMS_OUTPUT.put_line('l_body=' || (l_body));

SELECT UUID,ENTITY,INVOICETYPENAME INTO V_UUID,v_ENTITY,V_INVOICE_TYPE FROM ZATCA_HHA_INVOICE WHERE INVOICE_ID = REQ_ID_;
V_HASH := ZATCA_GENERATEHASH(ZATCA_XML_ID(REQ_ID_));
V_PIH := ZATCA_PIH();


SELECT SIGNED_XML,STEP1_HASH_OUTPUT INTO v_SIGNED_XML,V_STEP1_HASH_OUTPUT  FROM ZATCA_MAPPING_MASTER WHERE INVOICE_NUMBER = REQ_ID_;



--DBMS_OUTPUT.put_line('v_SIGNED_XML=' || (v_SIGNED_XML));

--l_body := '{"invoiceHash":'||apex_json.stringify(V_STEP1_HASH_OUTPUT)||',"uuid":'||apex_json.stringify(V_UUID)||',"invoice":'||apex_json.stringify(Zatca_EncodeBASE64_SIGNED(v_SIGNED_XML))||'}';     --SIGNED_XML  -ZATCA_XML_ID(REQ_ID_)
l_body := '{"invoiceHash":'||apex_json.stringify(ZATCA_GENERATEHASH(ZATCA_XML_ID(REQ_ID_)))||',"uuid":'||apex_json.stringify(V_UUID)||',"invoice":'||apex_json.stringify(Zatca_EncodeBASE64_SIGNED(v_SIGNED_XML))||'}';     --SIGNED_XML  -ZATCA_XML_ID(REQ_ID_)

DBMS_OUTPUT.put_line('l_body=' || (l_body));
 
    BEGIN
         DELETE FROM ZATCA_REQ_RES_CLOB where req_id = REQ_ID_;
         INSERT INTO ZATCA_REQ_RES_CLOB (REQ_ID, REQ_CLOB) VALUES (REQ_ID_, l_body);
   EXCEPTION WHEN NO_DATA_FOUND THEN
      NULL;
   END;



   --  INSERT INTO ZATCA_REQ_RES_CLOB_LOG(ID,REQ_ID,REQ_CLOB,CREATED_DATE,CREATED_BY) VALUES  ((SELECT NVL(MAX(ID),0)+1 FROM ZATCA_REQ_RES_CLOB_LOG),REQ_ID_, l_reqbody, SYSDATE,v('APP_USER')) ;
  
    apex_json.close_object;  --OPTIONAL
    apex_json.free_output;   --OPTIONAL 

         -- FOR TEST API
         --  l_body := APEX_WEB_SERVICE.make_rest_request(
         --    p_url         => 'https://api.zippopotam.us/us/33162',
         --    p_http_method => 'GET' );                             
                                                               
    l_respclob := apex_web_service.make_rest_request(p_url => 'https://gw-apic-gov.gazt.gov.sa/e-invoicing/developer-portal/invoices/reporting/single',
                                                     p_http_method => 'POST',
                                                     p_body => l_body,
                                                     p_wallet_path => 'file:/u01/app/oracle/product/12.2.0/dbhome_1/wallet_zatca', --'file:/home/oracle/Wallet',   
                                                     p_wallet_pwd => null                             
                                                     --   p_username => '', 
                                                     --   p_password => '',                                             
                                                     );       
                                   
  
    apex_json.parse(l_json, l_respclob);
    l_Status := apex_web_service.g_status_code;
    DBMS_OUTPUT.put_line('Status=' || (l_Status));
    DBMS_OUTPUT.put_line('l_respclob=' || (l_respclob));
  
    IF l_Status = '200' THEN
      l_Status_DESC := '200-Success';
      UPDATE ZATCA_rEQ_RES_CLOB SET LAST_RECORD = NULL where LAST_RECORD = 'Y';
      UPDATE ZATCA_REQ_RES_CLOB SET RES_CLOB = l_respclob, EXP_CLOB = l_Status_DESC, RES_CODE =l_Status,  TimeStamp = sysdate, IHASH = V_HASH, UUID = V_UUID,PIH = V_PIH, ENTITY = V_ENTITY, INVOICE_TYPE = V_INVOICE_TYPE, LAST_RECORD = 'Y' where req_id = REQ_ID_;   
    ELSIF l_Status = '202' THEN
      l_Status_DESC := '202-submitted invoice with warnings';
      UPDATE ZATCA_rEQ_RES_CLOB SET LAST_RECORD = NULL;
      UPDATE ZATCA_REQ_RES_CLOB SET RES_CLOB = l_respclob, EXP_CLOB = l_Status_DESC, RES_CODE =l_Status, TimeStamp = sysdate, IHASH = V_HASH, UUID = V_UUID,PIH = V_PIH, ENTITY = V_ENTITY, INVOICE_TYPE = V_INVOICE_TYPE,LAST_RECORD = 'Y' where req_id = REQ_ID_;

     ELSIF l_Status = '303' THEN
      l_Status_DESC := '303-clearance is deactivated';
      UPDATE ZATCA_REQ_RES_CLOB SET RES_CLOB = l_respclob, EXP_CLOB = l_Status_DESC, RES_CODE =l_Status, TimeStamp = sysdate where req_id = REQ_ID_;
    ELSIF l_Status = '400' THEN
      l_Status_DESC := '400-HTTP Bad Request';
      UPDATE ZATCA_REQ_RES_CLOB SET RES_CLOB = l_respclob, EXP_CLOB = l_Status_DESC, RES_CODE =l_Status, TimeStamp = sysdate where req_id = REQ_ID_;
    ELSIF l_Status = '401' THEN
      l_Status_DESC := '401-Bad username and password'; 
      UPDATE ZATCA_REQ_RES_CLOB SET RES_CLOB = l_respclob, EXP_CLOB = l_Status_DESC, RES_CODE =l_Status, TimeStamp = sysdate where req_id = REQ_ID_;    
    ELSIF l_Status = '500' THEN
      l_Status_DESC := '500-HTTP Internal Server Error.';
      UPDATE ZATCA_REQ_RES_CLOB SET RES_CLOB = l_respclob, EXP_CLOB = l_Status_DESC, RES_CODE =l_Status, TimeStamp = sysdate where req_id = REQ_ID_;
    ELSE
      l_Status_DESC := 'Error: ' || l_Status;
      UPDATE ZATCA_REQ_RES_CLOB SET RES_CLOB = l_respclob, EXP_CLOB = l_Status_DESC, RES_CODE =l_Status, TimeStamp = sysdate where req_id = REQ_ID_;
    END IF;
  
    commit;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      UPDATE ZATCA_REQ_RES_CLOB SET EXP_CLOB = 'NO_DATA_FOUND', RES_CODE =501, TimeStamp = sysdate where req_id = REQ_ID_;
      --UPDATE ZATCA_REQ_RES_CLOB_LOG SET EXP_CLOB = 'NO_DATA_FOUND' where req_id = REQ_ID_;
      commit;
      
    WHEN OTHERS THEN
      UPDATE ZATCA_REQ_RES_CLOB SET EXP_CLOB = 'OTHER EXCEPTION', RES_CODE =502, TimeStamp = sysdate where req_id = REQ_ID_;
      --UPDATE ZATCA_REQ_RES_CLOB_LOG SET EXP_CLOB = 'OTHER EXCEPTION' where req_id = REQ_ID_;
      commit;
      
  END;

/]]></n0:source>
		</n0:createOracleProcedure>
	</changeSet>
</databaseChangeLog>
