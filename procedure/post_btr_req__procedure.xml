<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext" 
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
	<changeSet id="047c70fb78a26013140c98e7b0bbda9facc4b0e2" author="(HHA_PROD)-Generated"     >
		<n0:createOracleProcedure objectName="POST_BTR_REQ_" objectType="PROCEDURE" ownerName="HHA_PROD"   >
			<n0:source><![CDATA[
  CREATE OR REPLACE EDITIONABLE PROCEDURE "HHA_PROD"."POST_BTR_REQ_" (REQ_ID_ VARCHAR2) is
l_respclob CLOB;
l_reqbody  CLOB;
l_xml      xmltype;
l_json     apex_json.t_values;
v_array    apex_application_global.vc_arr2;
l_members  WWV_FLOW_T_VARCHAR2;
json_body  VARCHAR2(4000);
l_Status   VARCHAR2(200);
begin

apex_web_service.g_request_headers(1).name := 'Content-Type';
apex_web_service.g_request_headers(1).value:= 'application/vnd.oracle.adf.resourceitem+json';
apex_web_service.g_request_headers(2).name := 'Effective-Of';
apex_web_service.g_request_headers(2).value:= 'RangeStartDate='||TO_CHAR(SYSDATE,'YYYY-MM-DD');
apex_json.initialize_clob_output;
apex_json.open_object;

--Effective-Of    RangeStartDate=2021-05-09
DELETE FROM REQ_RES_CLOB where req_id = REQ_ID_;

SELECT REPLACE(REPLACE(BUSINESS_TRAVEL,'"elementEntryValues":null','"elementEntryValues":[]'),'null','""') into l_reqbody
FROM
(
select JSON_OBJECT
          (
            'personNumber' is p.st_empcd,
            'employer'  is  LEGAL_EMPLOYER ,
            'absenceType' is 'Business Travel',
            'startDate' is to_char(BTR_START_DATE,'RRRR-MM-DD'),  --TO_CHAR(SYSDATE,'YYYY-MM-DD)'
            'endDate' is to_char(BTR_END_DATE,'RRRR-MM-DD'),  --TO_CHAR(SYSDATE,'YYYY-MM-DD')
            'startDateDuration' is '1',
            'endDateDuration' is '1',
            'absenceStatusCd' is  'SUBMITTED',
            'comments' is (SELECT desc_eng FROM  codes_descriptions where main_code = '252' and major_code = '1' and minor_code <> '0' AND minor_code = S.COUNTRY) ||'-'||CITY
          --    ABSENT ON NULL
            ) BUSINESS_TRAVEL
FROM HCM_BTR s, pastatic p
WHERE p.st_empcd = s.BTR_EMP
AND s.REQ_ID = REQ_ID_ --Request id from parameter
AND NVL(SAAS_UPD_FLAG,'N') = 'N'
AND SAAS_UPD_DATE IS NULL
--AND NVL(REQUESTED_AMOUNT,0) <> 0
--AND NVL(REQUEST_AMT1,0) <> 0
AND APPR_REJ_FLAG = 'Y'
);

INSERT INTO REQ_RES_CLOB(REQ_ID,REQ_CLOB) VALUES (REQ_ID_, l_reqbody);
INSERT INTO REQ_RES_CLOB_LOG(ID,REQ_ID,REQ_CLOB,CREATED_DATE,CREATED_BY) VALUES 
((SELECT NVL(MAX(ID),0)+1 FROM REQ_RES_CLOB_LOG),REQ_ID_, l_reqbody, SYSDATE,v('APP_USER')) ;
apex_json.close_object;
--dbms_output.put_line(apex_json.get_clob_output);
--l_reqbody := apex_json.get_clob_output;
apex_json.free_output;

--production instance
--https://ejfz-test.fa.em2.oraclecloud.com:443/hcmRestApi/resources/11.13.18.05/elementEntries

l_respclob := apex_web_service.make_rest_request(p_url => 'https://ejfz.fa.em2.oraclecloud.com:443/hcmRestApi/resources/11.13.18.05/absences',
                                                 p_http_method => 'POST',
                                                 p_username => 'PAASUser',
                                                 p_password => 'Paas@321',
                                                 p_body => l_reqbody
                                                 --p_wallet_path   => 'file:/u01/app/oracle/product/12.2.0/dbhome_1/wallet',
                                                 --p_wallet_pwd    => 'welcome1'
                                             );

--apex_json.parse(l_json, l_respclob);
l_Status := apex_web_service.g_status_code;

IF l_Status = '200' THEN
   l_Status := '200-Success';
   UPDATE hcm_BTR
   SET SAAS_UPD_FLAG = 'Y', SAAS_UPD_DATE = SYSDATE
   WHERE REQ_ID = REQ_ID_
   AND SAAS_UPD_FLAG IS NULL;
   commit;
ELSIF l_Status = '201' THEN
   l_Status := '201-Created';
   UPDATE hcm_BTR
   SET SAAS_UPD_FLAG = 'Y', SAAS_UPD_DATE = SYSDATE
   WHERE REQ_ID = REQ_ID_
   AND SAAS_UPD_FLAG IS NULL;
   commit;
ELSIF l_Status = '400' THEN
   l_Status := '409-Bad Request';
ELSIF l_Status = '409' THEN
   l_Status := '409-Conflict';
ELSE
   l_Status := 'Error: '||l_Status;
END IF;

UPDATE REQ_RES_CLOB SET RES_CLOB = l_respclob, EXP_CLOB = l_Status where req_id = REQ_ID_;
UPDATE REQ_RES_CLOB_LOG SET RES_CLOB = l_respclob, EXP_CLOB = l_Status where req_id = REQ_ID_;
commit;






EXCEPTION
  WHEN NO_DATA_FOUND THEN
      UPDATE REQ_RES_CLOB SET EXP_CLOB = 'NO_DATA_FOUND' where req_id = REQ_ID_;
      UPDATE REQ_RES_CLOB_LOG SET EXP_CLOB = 'NO_DATA_FOUND' where req_id = REQ_ID_;
      commit;
  WHEN OTHERS THEN
      UPDATE REQ_RES_CLOB SET EXP_CLOB = 'OTHER EXCEPTION' where req_id = REQ_ID_;
      UPDATE REQ_RES_CLOB_LOG SET EXP_CLOB = 'OTHER EXCEPTION' where req_id = REQ_ID_;
      commit;
END;


/]]></n0:source>
		</n0:createOracleProcedure>
	</changeSet>
</databaseChangeLog>
